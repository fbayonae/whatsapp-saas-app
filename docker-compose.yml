services:
  backend:
    build: ./backend
    container_name: wha_saas_backend
    ports:
      - "3001:3001"
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - PORT=3001
    restart: unless-stopped
    networks:
      - wha_saas-net
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: wha_saas_frontend
    ports:
      - "3000:80"
    restart: unless-stopped
    networks:
      - wha_saas-net

  nginx:
    image: nginx:alpine
    container_name: wha_saas_nginx
    volumes:
      - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt/live/technologygroup.es/technologygroup.es.fullchain.pem:/etc/nginx/ssl/fullchain.pem:ro
      - /etc/letsencrypt/live/technologygroup.es/technologygroup.es.key.pem:/etc/nginx/ssl/privkey.pem:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - wha_saas-net

  db:
    image: postgres:15
    container_name: wha_saas_postgres
    restart: unless-stopped
    env_file:
      - ./backend/.env
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - wha_saas-net

  pgadmin:
    image: dpage/pgadmin4
    container_name: wha_saas_pgadmin
    restart: unless-stopped
    env_file:
      - ./backend/.env
    ports:
      - "5050:80"
    networks:
      - wha_saas-net

  redis:
    image: redis:6
    container_name: redis
    env_file:
      - ./backend/.env
    command:
      [
        "redis-server",
        "--rename-command", "FLUSHALL", "",
        "--rename-command", "CONFIG", "",
        "--rename-command", "DEBUG", ""
      ]
    ports:
      - "6379:6379"
    networks:
      - wha_saas-net

  worker:
    build: ./backend
    command: node src/workers/worker.js
    env_file:
      - ./backend/.env
    depends_on:
      - redis
      - backend
    networks:
      - wha_saas-net
    volumes:
      - ./backend:/app
      - /app/node_modules

networks:
  wha_saas-net:


volumes:
  pgdata:
